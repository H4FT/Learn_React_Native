{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getFilmDetailFromApi, getImagefromApi } from \"../API/TDMBapi\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\n\nvar FilmDetail = function (_React$Component) {\n  _inherits(FilmDetail, _React$Component);\n\n  var _super = _createSuper(FilmDetail);\n\n  function FilmDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FilmDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      film: undefined,\n      isLoading: true\n    };\n    _this._shareFilm = _this._shareFilm.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(FilmDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var favoriteFilmIndex = this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this2.props.navigation.state.params.idFilm;\n      });\n\n      if (favoriteFilmIndex !== -1) {\n        this.setState({\n          film: this.props.favoritesFilm[favoriteFilmIndex],\n          isLoading: false\n        });\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(function (data) {\n        _this2.setState({\n          film: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"_shareFilm\",\n    value: function _shareFilm() {\n      var film = this.state.film;\n      Share.share({\n        title: film.title,\n        message: film.overview\n      });\n    }\n  }, {\n    key: \"_displayFloatingActionButton\",\n    value: function _displayFloatingActionButton() {\n      var _this3 = this;\n\n      var film = this.state.film;\n\n      if (film != undefined && Platform.OS === 'android') {\n        return React.createElement(TouchableOpacity, {\n          style: styles.share_touchable_floatingactionbutton,\n          onPress: function onPress() {\n            return _this3._shareFilm;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.share_image,\n          source: require(\"../image/ic_share.android.png\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayFavoriteImage\",\n    value: function _displayFavoriteImage() {\n      var _this4 = this;\n\n      var sourceImage = require(\"../image/ic_no_favorite.png\");\n\n      if (this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this4.state.film.id;\n      }) !== -1) {\n        sourceImage = require(\"../image/ic_favorite.png\");\n      }\n\n      return React.createElement(Image, {\n        style: styles.favorite_image,\n        source: sourceImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"_toogleFavorite\",\n    value: function _toogleFavorite() {\n      var action = {\n        type: 'TOGGLE_FAVORITE',\n        value: this.state.film\n      };\n      this.props.dispatch(action);\n    }\n  }, {\n    key: \"_displayFilm\",\n    value: function _displayFilm() {\n      var _this5 = this;\n\n      var film = this.state.film;\n\n      if (film != undefined) {\n        return React.createElement(ScrollView, {\n          style: styles.scrollview_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: getImagefromApi(film.backdrop_path)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: styles.title_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }, film.title), React.createElement(TouchableOpacity, {\n          style: styles.favorite_container,\n          onPress: function onPress() {\n            return _this5._toogleFavorite();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }\n        }, this._displayFavoriteImage()), React.createElement(Text, {\n          style: styles.description_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, film.overview), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, \"Sorti le \", moment(new Date(film.release_date)).format('DD/MM/YYYY')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, \"Note: \", film.vote_average), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, \"Nombre de votes: \", film.vote_count), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }\n        }, \"Budget: \", numeral(film.budget).format('0,0[.]00 $')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }\n        }, \"Genre(s): \", film.genres.map(function (genre) {\n          return genre.name;\n        }).join(\" / \")), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }\n        }, \"Companie(s): \", film.production_companies.map(function (company) {\n          return company.name;\n        }).join(\" / \")));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, this._displayLoading(), this._displayFilm(), this._displayFloatingActionButton);\n    }\n  }]);\n\n  return FilmDetail;\n}(React.Component);\n\nFilmDetail.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  var params = navigation.state.params;\n\n  if (params.film != undefined && Platform.OS === 'ios') {\n    return {\n      headerRight: React.createElement(TouchableOpacity, {\n        style: styles.share_touchable_headerrightbutton,\n        onPress: function onPress() {\n          return params.shareFilm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 30\n        }\n      }, React.createElement(Image, {\n        style: styles.share_image,\n        source: require(\"../image/ic_share.ios.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }\n      }))\n    };\n  }\n};\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 1,\n    top: 1,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollview_container: {\n    flex: 1\n  },\n  image: {\n    height: 169,\n    margin: 5\n  },\n  title_text: {\n    fontWeight: 'bold',\n    fontSize: 35,\n    flex: 1,\n    flexWrap: 'wrap',\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    marginTop: 10,\n    color: '#000000',\n    textAlign: 'center'\n  },\n  description_text: {\n    fontStyle: 'italic',\n    color: '#666666',\n    margin: 5,\n    marginBottom: 15\n  },\n  default_text: {\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5\n  },\n  favorite_container: {\n    alignItems: 'center'\n  },\n  favorite_image: {\n    width: 40,\n    height: 40\n  },\n  share_touchable_floatingactionbutton: {\n    position: 'absolute',\n    width: 60,\n    height: 60,\n    right: 30,\n    bottom: 30,\n    borderRadius: 30,\n    backgroundColor: '#e91e63',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  share_image: {\n    width: 30,\n    height: 30\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmDetail);","map":{"version":3,"sources":["/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js"],"names":["React","getFilmDetailFromApi","getImagefromApi","ScrollView","TouchableOpacity","moment","numeral","connect","FilmDetail","props","state","film","undefined","isLoading","_shareFilm","bind","favoriteFilmIndex","favoritesFilm","findIndex","item","id","navigation","params","idFilm","setState","then","data","Share","share","title","message","overview","Platform","OS","styles","share_touchable_floatingactionbutton","share_image","require","loading_container","sourceImage","favorite_image","action","type","value","dispatch","scrollview_container","image","uri","backdrop_path","title_text","favorite_container","_toogleFavorite","_displayFavoriteImage","description_text","default_text","Date","release_date","format","vote_average","vote_count","budget","genres","map","genre","name","join","production_companies","company","main_container","_displayLoading","_displayFilm","_displayFloatingActionButton","Component","navigationOptions","headerRight","share_touchable_headerrightbutton","shareFilm","StyleSheet","create","flex","position","left","right","top","bottom","alignItems","justifyContent","height","margin","fontWeight","fontSize","flexWrap","marginLeft","marginRight","marginTop","color","textAlign","fontStyle","marginBottom","width","borderRadius","backgroundColor","mapStateToProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,oBAAT,EAA+BC,eAA/B;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,8BAA7C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,U;;;;;AAkBF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEC,SADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AANe;AAOlB;;;;wCAEmB;AAAA;;AAChB,UAAMC,iBAAiB,GAAG,KAAKP,KAAL,CAAWQ,aAAX,CAAyBC,SAAzB,CAAmC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAY,MAAI,CAACX,KAAL,CAAWY,UAAX,CAAsBX,KAAtB,CAA4BY,MAA5B,CAAmCC,MAAnD;AAAA,OAAvC,CAA1B;;AACA,UAAIP,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC1B,aAAKQ,QAAL,CAAc;AACVb,UAAAA,IAAI,EAAC,KAAKF,KAAL,CAAWQ,aAAX,CAAyBD,iBAAzB,CADK;AAEVH,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIA;AACH;;AACD,WAAKW,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAE;AAAb,OAAd;AACAZ,MAAAA,oBAAoB,CAAC,KAAKQ,KAAL,CAAWY,UAAX,CAAsBX,KAAtB,CAA4BY,MAA5B,CAAmCC,MAApC,CAApB,CAAgEE,IAAhE,CAAqE,UAAAC,IAAI,EAAI;AACzE,QAAA,MAAI,CAACF,QAAL,CAAc;AACVb,UAAAA,IAAI,EAAEe,IADI;AAEVb,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OALD;AAMH;;;iCAEY;AAAA,UACDF,IADC,GACQ,KAAKD,KADb,CACDC,IADC;AAETgB,MAAAA,KAAK,CAACC,KAAN,CAAY;AAAEC,QAAAA,KAAK,EAAElB,IAAI,CAACkB,KAAd;AAAqBC,QAAAA,OAAO,EAAEnB,IAAI,CAACoB;AAAnC,OAAZ;AACH;;;mDAE8B;AAAA;;AAAA,UACnBpB,IADmB,GACV,KAAKD,KADK,CACnBC,IADmB;;AAE3B,UAAIA,IAAI,IAAIC,SAAR,IAAqBoB,QAAQ,CAACC,EAAT,KAAgB,SAAzC,EAAoD;AAChD,eACI,oBAAC,gBAAD;AACI,UAAA,KAAK,EAAEC,MAAM,CAACC,oCADlB;AAEI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACrB,UAAX;AAAA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGI,oBAAC,KAAD;AACI,UAAA,KAAK,EAAEoB,MAAM,CAACE,WADlB;AAEI,UAAA,MAAM,EAAEC,OAAO,iCAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ,CADJ;AAUH;AACJ;;;sCAEiB;AACd,UAAI,KAAK3B,KAAL,CAAWG,SAAf,EAA0B;AACtB,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEqB,MAAM,CAACI,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;AACJ;;;4CAEuB;AAAA;;AACpB,UAAIC,WAAW,GAAGF,OAAO,+BAAzB;;AACA,UAAI,KAAK5B,KAAL,CAAWQ,aAAX,CAAyBC,SAAzB,CAAmC,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAY,MAAI,CAACV,KAAL,CAAWC,IAAX,CAAgBS,EAAhC;AAAA,OAAvC,MAA+E,CAAC,CAApF,EAAuF;AACnFmB,QAAAA,WAAW,GAAGF,OAAO,4BAArB;AACH;;AACD,aACI,oBAAC,KAAD;AACI,QAAA,KAAK,EAAEH,MAAM,CAACM,cADlB;AAEI,QAAA,MAAM,EAAED,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMH;;;sCAEiB;AACd,UAAME,MAAM,GAAG;AAAEC,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC;AAA7C,OAAf;AACA,WAAKF,KAAL,CAAWmC,QAAX,CAAoBH,MAApB;AACH;;;mCAEc;AAAA;;AAAA,UACH9B,IADG,GACM,KAAKD,KADX,CACHC,IADG;;AAEX,UAAIA,IAAI,IAAIC,SAAZ,EAAuB;AACnB,eACI,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAEsB,MAAM,CAACW,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,KAAD;AACI,UAAA,KAAK,EAAEX,MAAM,CAACY,KADlB;AAEI,UAAA,MAAM,EAAE;AAACC,YAAAA,GAAG,EAAE7C,eAAe,CAACS,IAAI,CAACqC,aAAN;AAArB,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAKI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEd,MAAM,CAACe,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCtC,IAAI,CAACkB,KAAtC,CALJ,EAMI,oBAAC,gBAAD;AACA,UAAA,KAAK,EAAEK,MAAM,CAACgB,kBADd;AAEA,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,eAAL,EAAN;AAAA,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGC,KAAKC,qBAAL,EAHD,CANJ,EAWI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,MAAM,CAACmB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuC1C,IAAI,CAACoB,QAA5C,CAXJ,EAYI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA4CjD,MAAM,CAAC,IAAIkD,IAAJ,CAAS5C,IAAI,CAAC6C,YAAd,CAAD,CAAN,CAAoCC,MAApC,CAA2C,YAA3C,CAA5C,CAZJ,EAaI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyC3C,IAAI,CAAC+C,YAA9C,CAbJ,EAcI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAExB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAoD3C,IAAI,CAACgD,UAAzD,CAdJ,EAeI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEzB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2ChD,OAAO,CAACK,IAAI,CAACiD,MAAN,CAAP,CAAqBH,MAArB,CAA4B,YAA5B,CAA3C,CAfJ,EAgBI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEvB,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6C3C,IAAI,CAACkD,MAAL,CAAYC,GAAZ,CAAgB,UAASC,KAAT,EAAe;AACxE,iBAAOA,KAAK,CAACC,IAAb;AACH,SAF4C,EAE1CC,IAF0C,CAErC,KAFqC,CAA7C,CAhBJ,EAoBI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE/B,MAAM,CAACoB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAgD3C,IAAI,CAACuD,oBAAL,CAA0BJ,GAA1B,CAA8B,UAASK,OAAT,EAAiB;AAC3F,iBAAOA,OAAO,CAACH,IAAf;AACH,SAF+C,EAE7CC,IAF6C,CAExC,KAFwC,CAAhD,CApBJ,CADJ;AA2BH;AACJ;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/B,MAAM,CAACkC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,eAAL,EADL,EAEK,KAAKC,YAAL,EAFL,EAGK,KAAKC,4BAHV,CADJ;AAOH;;;;EAvIoBvE,KAAK,CAACwE,S;;AAAzBhE,U,CAEKiE,iB,GAAoB,gBAAoB;AAAA,MAAjBpD,UAAiB,QAAjBA,UAAiB;AAAA,MACnCC,MADmC,GACxBD,UAAU,CAACX,KADa,CACnCY,MADmC;;AAE3C,MAAIA,MAAM,CAACX,IAAP,IAAeC,SAAf,IAA4BoB,QAAQ,CAACC,EAAT,KAAgB,KAAhD,EAAuD;AACnD,WAAO;AACHyC,MAAAA,WAAW,EAAE,oBAAC,gBAAD;AACG,QAAA,KAAK,EAAExC,MAAM,CAACyC,iCADjB;AAEG,QAAA,OAAO,EAAE;AAAA,iBAAMrD,MAAM,CAACsD,SAAP,EAAN;AAAA,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGD,oBAAC,KAAD;AACI,QAAA,KAAK,EAAE1C,MAAM,CAACE,WADlB;AAEI,QAAA,MAAM,EAAEC,OAAO,6BAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHC;AADV,KAAP;AAUH;AACJ,C;;AA0HL,IAAMH,MAAM,GAAG2C,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,cAAc,EAAE;AACZW,IAAAA,IAAI,EAAE;AADM,GADa;AAI7BzC,EAAAA,iBAAiB,EAAE;AACf0C,IAAAA,QAAQ,EAAE,UADK;AAEfC,IAAAA,IAAI,EAAE,CAFS;AAGfC,IAAAA,KAAK,EAAE,CAHQ;AAIfC,IAAAA,GAAG,EAAE,CAJU;AAKfC,IAAAA,MAAM,EAAE,CALO;AAMfC,IAAAA,UAAU,EAAE,QANG;AAOfC,IAAAA,cAAc,EAAE;AAPD,GAJU;AAa7BzC,EAAAA,oBAAoB,EAAE;AAClBkC,IAAAA,IAAI,EAAE;AADY,GAbO;AAgB7BjC,EAAAA,KAAK,EAAE;AACHyC,IAAAA,MAAM,EAAE,GADL;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAhBsB;AAoB7BvC,EAAAA,UAAU,EAAE;AACRwC,IAAAA,UAAU,EAAE,MADJ;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRX,IAAAA,IAAI,EAAE,CAHE;AAIRY,IAAAA,QAAQ,EAAE,MAJF;AAKRC,IAAAA,UAAU,EAAE,CALJ;AAMRC,IAAAA,WAAW,EAAE,CANL;AAORC,IAAAA,SAAS,EAAE,EAPH;AAQRA,IAAAA,SAAS,EAAE,EARH;AASRC,IAAAA,KAAK,EAAE,SATC;AAURC,IAAAA,SAAS,EAAE;AAVH,GApBiB;AAgC7B3C,EAAAA,gBAAgB,EAAE;AACd4C,IAAAA,SAAS,EAAE,QADG;AAEdF,IAAAA,KAAK,EAAE,SAFO;AAGdP,IAAAA,MAAM,EAAE,CAHM;AAIdU,IAAAA,YAAY,EAAE;AAJA,GAhCW;AAsC7B5C,EAAAA,YAAY,EAAE;AACVsC,IAAAA,UAAU,EAAE,CADF;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,SAAS,EAAE;AAHD,GAtCe;AA2C7B5C,EAAAA,kBAAkB,EAAE;AAChBmC,IAAAA,UAAU,EAAE;AADI,GA3CS;AA8C7B7C,EAAAA,cAAc,EAAE;AACZ2D,IAAAA,KAAK,EAAE,EADK;AAEZZ,IAAAA,MAAM,EAAE;AAFI,GA9Ca;AAkD7BpD,EAAAA,oCAAoC,EAAE;AAClC6C,IAAAA,QAAQ,EAAE,UADwB;AAElCmB,IAAAA,KAAK,EAAE,EAF2B;AAGlCZ,IAAAA,MAAM,EAAE,EAH0B;AAIlCL,IAAAA,KAAK,EAAE,EAJ2B;AAKlCE,IAAAA,MAAM,EAAE,EAL0B;AAMlCgB,IAAAA,YAAY,EAAE,EANoB;AAOlCC,IAAAA,eAAe,EAAE,SAPiB;AAQlCf,IAAAA,cAAc,EAAE,QARkB;AASlCD,IAAAA,UAAU,EAAE;AATsB,GAlDT;AA6D7BjD,EAAAA,WAAW,EAAE;AACT+D,IAAAA,KAAK,EAAE,EADE;AAETZ,IAAAA,MAAM,EAAE;AAFC;AA7DgB,CAAlB,CAAf;;AAmEA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAC5F,KAAD,EAAW;AAC/B,SAAO;AACHO,IAAAA,aAAa,EAAEP,KAAK,CAACO;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAAC+F,eAAD,CAAP,CAAyB9F,UAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Platform, Share, View, ActivityIndicator, Text, Image } from 'react-native'\nimport { getFilmDetailFromApi, getImagefromApi } from '../API/TDMBapi'\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler'\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { connect } from 'react-redux'\n\nclass FilmDetail extends React.Component {\n\n    static navigationOptions = ({ navigation }) => {\n        const { params } = navigation.state\n        if (params.film != undefined && Platform.OS === 'ios') {\n            return {\n                headerRight: <TouchableOpacity\n                                style={styles.share_touchable_headerrightbutton}\n                                onPress={() => params.shareFilm()}>\n                            <Image\n                                style={styles.share_image}\n                                source={require('../image/ic_share.ios.png')}\n                            />\n                </TouchableOpacity>\n            }\n        }\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            film: undefined,\n            isLoading: true\n        }\n        this._shareFilm = this._shareFilm.bind(this)\n    }\n\n    componentDidMount() {\n        const favoriteFilmIndex = this.props.favoritesFilm.findIndex(item => item.id === this.props.navigation.state.params.idFilm)\n        if (favoriteFilmIndex !== -1) {\n            this.setState({\n                film:this.props.favoritesFilm[favoriteFilmIndex],\n                isLoading: false\n            })\n            return\n        }\n        this.setState({ isLoading: true })\n        getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(data => {\n            this.setState({\n                film: data,\n                isLoading: false\n            })\n        })\n    }\n\n    _shareFilm() {\n        const { film } = this.state\n        Share.share({ title: film.title, message: film.overview })\n    }\n\n    _displayFloatingActionButton() {\n        const { film } = this.state\n        if (film != undefined && Platform.OS === 'android') {\n            return (\n                <TouchableOpacity\n                    style={styles.share_touchable_floatingactionbutton}\n                    onPress={() => this._shareFilm}>\n                    <Image\n                        style={styles.share_image}\n                        source={require('../image/ic_share.android.png')}\n                    />\n                </TouchableOpacity>\n            )\n        }\n    }\n\n    _displayLoading() {\n        if (this.state.isLoading) {\n            return (\n                <View style={styles.loading_container}>\n                    <ActivityIndicator size='large'/>\n                </View>\n            )\n        }\n    }\n\n    _displayFavoriteImage() {\n        let sourceImage = require('../image/ic_no_favorite.png')\n        if (this.props.favoritesFilm.findIndex(item => item.id === this.state.film.id) !== -1) {\n            sourceImage = require('../image/ic_favorite.png')\n        }\n        return (\n            <Image\n                style={styles.favorite_image}\n                source={sourceImage}\n            />\n        )\n    }\n\n    _toogleFavorite() {\n        const action = { type: 'TOGGLE_FAVORITE', value: this.state.film }\n        this.props.dispatch(action)\n    }\n\n    _displayFilm() {\n        const { film } = this.state\n        if (film != undefined) {\n            return(\n                <ScrollView style={styles.scrollview_container}>\n                    <Image\n                        style={styles.image}\n                        source={{uri: getImagefromApi(film.backdrop_path)}}\n                    />\n                    <Text style={styles.title_text}>{film.title}</Text>\n                    <TouchableOpacity\n                    style={styles.favorite_container}\n                    onPress={() => this._toogleFavorite()}>\n                    {this._displayFavoriteImage()}\n                    </TouchableOpacity>\n                    <Text style={styles.description_text}>{film.overview}</Text>\n                    <Text style={styles.default_text}>Sorti le {moment(new Date(film.release_date)).format('DD/MM/YYYY')}</Text>\n                    <Text style={styles.default_text}>Note: {film.vote_average}</Text>\n                    <Text style={styles.default_text}>Nombre de votes: {film.vote_count}</Text>\n                    <Text style={styles.default_text}>Budget: {numeral(film.budget).format('0,0[.]00 $')}</Text>\n                    <Text style={styles.default_text}>Genre(s): {film.genres.map(function(genre){\n                        return genre.name;\n                    }).join(\" / \")}\n                    </Text>\n                    <Text style={styles.default_text}>Companie(s): {film.production_companies.map(function(company){\n                        return company.name;\n                    }).join(\" / \")}\n                    </Text>\n                </ScrollView>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.main_container}>\n                {this._displayLoading()}\n                {this._displayFilm()}\n                {this._displayFloatingActionButton}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    main_container: {\n        flex: 1,\n    },\n    loading_container: {\n        position: 'absolute',\n        left: 0,\n        right: 1,\n        top: 1,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    scrollview_container: {\n        flex: 1\n    },\n    image: {\n        height: 169,\n        margin: 5\n    },\n    title_text: {\n        fontWeight: 'bold',\n        fontSize: 35,\n        flex: 1,\n        flexWrap: 'wrap',\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n        marginTop: 10,\n        color: '#000000',\n        textAlign: 'center'\n    },\n    description_text: {\n        fontStyle: 'italic',\n        color: '#666666',\n        margin: 5,\n        marginBottom: 15\n    },\n    default_text: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 5\n    },\n    favorite_container: {\n        alignItems: 'center'\n    },\n    favorite_image: {\n        width: 40,\n        height: 40\n    },\n    share_touchable_floatingactionbutton: {\n        position: 'absolute',\n        width: 60,\n        height: 60,\n        right: 30,\n        bottom: 30,\n        borderRadius: 30,\n        backgroundColor: '#e91e63',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    share_image: {\n        width: 30,\n        height: 30\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        favoritesFilm: state.favoritesFilm\n    }\n}\n\nexport default connect(mapStateToProps)(FilmDetail)"]},"metadata":{},"sourceType":"module"}