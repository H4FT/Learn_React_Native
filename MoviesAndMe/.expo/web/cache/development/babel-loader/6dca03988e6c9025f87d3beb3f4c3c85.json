{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { getFilmDetailFromApi } from \"../API/TDMBapi\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar FilmDetail = function (_React$Component) {\n  _inherits(FilmDetail, _React$Component);\n\n  var _super = _createSuper(FilmDetail);\n\n  function FilmDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FilmDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      film: undefined,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(FilmDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(function (data) {\n        _this2.setState({\n          film: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayFilm\",\n    value: function _displayFilm() {\n      if (this.state.film != undefined) {\n        return React.createElement(ScrollView, {\n          style: styles.scrollview_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }\n        }, this.state.film.title));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, this._displayLoading(), this._displayFilm());\n    }\n  }]);\n\n  return FilmDetail;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 1,\n    top: 1,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default FilmDetail;","map":{"version":3,"sources":["/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js"],"names":["React","getFilmDetailFromApi","ScrollView","FilmDetail","props","state","film","undefined","isLoading","navigation","params","idFilm","then","data","setState","styles","loading_container","scrollview_container","title","main_container","_displayLoading","_displayFilm","Component","StyleSheet","create","flex","position","left","right","top","bottom","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,oBAAT;AACA,SAASC,UAAT,QAA2B,8BAA3B;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEC,SADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAFe;AAMlB;;;;wCAEmB;AAAA;;AAChBP,MAAAA,oBAAoB,CAAC,KAAKG,KAAL,CAAWK,UAAX,CAAsBJ,KAAtB,CAA4BK,MAA5B,CAAmCC,MAApC,CAApB,CAAgEC,IAAhE,CAAqE,UAAAC,IAAI,EAAI;AACzE,QAAA,MAAI,CAACC,QAAL,CAAc;AACVR,UAAAA,IAAI,EAAEO,IADI;AAEVL,UAAAA,SAAS,EAAE;AAFD,SAAd;AAIH,OALD;AAMH;;;sCAEiB;AACd,UAAI,KAAKH,KAAL,CAAWG,SAAf,EAA0B;AACtB,eACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEO,MAAM,CAACC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;AACJ;;;mCAEc;AACX,UAAI,KAAKX,KAAL,CAAWC,IAAX,IAAmBC,SAAvB,EAAkC;AAC9B,eACI,oBAAC,UAAD;AAAY,UAAA,KAAK,EAAEQ,MAAM,CAACE,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,KAAvB,CADJ,CADJ;AAKH;AACJ;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,eAAL,EADL,EAEK,KAAKC,YAAL,EAFL,CADJ;AAMH;;;;EA9CoBrB,KAAK,CAACsB,S;;AAiD/B,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,cAAc,EAAE;AACZM,IAAAA,IAAI,EAAE;AADM,GADa;AAI7BT,EAAAA,iBAAiB,EAAE;AACfU,IAAAA,QAAQ,EAAE,UADK;AAEfC,IAAAA,IAAI,EAAE,CAFS;AAGfC,IAAAA,KAAK,EAAE,CAHQ;AAIfC,IAAAA,GAAG,EAAE,CAJU;AAKfC,IAAAA,MAAM,EAAE,CALO;AAMfC,IAAAA,UAAU,EAAE,QANG;AAOfC,IAAAA,cAAc,EAAE;AAPD;AAJU,CAAlB,CAAf;AAeA,eAAe7B,UAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, View, ActivityIndicator, Text } from 'react-native'\nimport { getFilmDetailFromApi } from '../API/TDMBapi'\nimport { ScrollView } from 'react-native-gesture-handler'\n\nclass FilmDetail extends React.Component {z\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            film: undefined,\n            isLoading: true\n        }\n    }\n\n    componentDidMount() {\n        getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(data => {\n            this.setState({\n                film: data,\n                isLoading: false\n            })\n        })\n    }\n\n    _displayLoading() {\n        if (this.state.isLoading) {\n            return (\n                <View style={styles.loading_container}>\n                    <ActivityIndicator size='large'/>\n                </View>\n            )\n        }\n    }\n\n    _displayFilm() {\n        if (this.state.film != undefined) {\n            return(\n                <ScrollView style={styles.scrollview_container}>\n                    <Text>{this.state.film.title}</Text>\n                </ScrollView>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.main_container}>\n                {this._displayLoading()}\n                {this._displayFilm()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    main_container: {\n        flex: 1,\n    },\n    loading_container: {\n        position: 'absolute',\n        left: 0,\n        right: 1,\n        top: 1,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n})\n\nexport default FilmDetail"]},"metadata":{},"sourceType":"module"}