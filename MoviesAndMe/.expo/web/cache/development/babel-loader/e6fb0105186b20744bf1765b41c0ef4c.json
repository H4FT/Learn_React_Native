{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { getFilmDetailFromApi, getImagefromApi } from \"../API/TDMBapi\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { connect } from 'react-redux';\n\nvar FilmDetail = function (_React$Component) {\n  _inherits(FilmDetail, _React$Component);\n\n  var _super = _createSuper(FilmDetail);\n\n  function FilmDetail(props) {\n    var _this;\n\n    _classCallCheck(this, FilmDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      film: undefined,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(FilmDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var favoriteFilmIndex = this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this2.props.navigation.state.params.idFilm;\n      });\n\n      if (favoriteFilmIndex !== -1) {\n        this.setState({\n          film: this.props.favoritesFilm[favoriteFilmIndex],\n          isLoading: false\n        });\n        return;\n      }\n\n      this.setState({\n        isLoading: true\n      });\n      getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(function (data) {\n        _this2.setState({\n          film: data,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"_displayLoading\",\n    value: function _displayLoading() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.loading_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"_displayFavoriteImage\",\n    value: function _displayFavoriteImage() {\n      var _this3 = this;\n\n      var sourceImage = require(\"../image/ic_no_favorite.png\");\n\n      if (this.props.favoritesFilm.findIndex(function (item) {\n        return item.id === _this3.state.film.id;\n      }) !== -1) {\n        sourceImage = require(\"../image/ic_favorite.png\");\n      }\n\n      return React.createElement(Image, {\n        style: styles.favorite_image,\n        source: sourceImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"_toogleFavorite\",\n    value: function _toogleFavorite() {\n      var action = {\n        type: 'TOGGLE_FAVORITE',\n        value: this.state.film\n      };\n      this.props.dispatch(action);\n    }\n  }, {\n    key: \"_displayFilm\",\n    value: function _displayFilm() {\n      var _this4 = this;\n\n      var film = this.state.film;\n\n      if (film != undefined) {\n        return React.createElement(ScrollView, {\n          style: styles.scrollview_container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, React.createElement(Image, {\n          style: styles.image,\n          source: {\n            uri: getImagefromApi(film.backdrop_path)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: styles.title_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }\n        }, film.title), React.createElement(TouchableOpacity, {\n          style: styles.favorite_container,\n          onPress: function onPress() {\n            return _this4._toogleFavorite();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }\n        }, this._displayFavoriteImage()), React.createElement(Text, {\n          style: styles.description_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }\n        }, film.overview), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, \"Sorti le \", moment(new Date(film.release_date)).format('DD/MM/YYYY')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }\n        }, \"Note: \", film.vote_average), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }\n        }, \"Nombre de votes: \", film.vote_count), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }, \"Budget: \", numeral(film.budget).format('0,0[.]00 $')), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }\n        }, \"Genre(s): \", film.genres.map(function (genre) {\n          return genre.name;\n        }).join(\" / \")), React.createElement(Text, {\n          style: styles.default_text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }\n        }, \"Companie(s): \", film.production_companies.map(function (company) {\n          return company.name;\n        }).join(\" / \")));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.main_container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, this._displayLoading(), this._displayFilm());\n    }\n  }]);\n\n  return FilmDetail;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  main_container: {\n    flex: 1\n  },\n  loading_container: {\n    position: 'absolute',\n    left: 0,\n    right: 1,\n    top: 1,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollview_container: {\n    flex: 1\n  },\n  image: {\n    height: 169,\n    margin: 5\n  },\n  title_text: {\n    fontWeight: 'bold',\n    fontSize: 35,\n    flex: 1,\n    flexWrap: 'wrap',\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n    marginTop: 10,\n    color: '#000000',\n    textAlign: 'center'\n  },\n  description_text: {\n    fontStyle: 'italic',\n    color: '#666666',\n    margin: 5,\n    marginBottom: 15\n  },\n  default_text: {\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 5\n  },\n  favorite_container: {\n    alignItems: 'center'\n  },\n  favorite_image: {\n    width: 40,\n    height: 40\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmDetail);","map":{"version":3,"sources":["/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_detail.js"],"names":["React","getFilmDetailFromApi","getImagefromApi","ScrollView","TouchableOpacity","moment","numeral","connect","FilmDetail","props","state","film","undefined","isLoading","favoriteFilmIndex","favoritesFilm","findIndex","item","id","navigation","params","idFilm","setState","then","data","styles","loading_container","sourceImage","require","favorite_image","action","type","value","dispatch","scrollview_container","image","uri","backdrop_path","title_text","title","favorite_container","_toogleFavorite","_displayFavoriteImage","description_text","overview","default_text","Date","release_date","format","vote_average","vote_count","budget","genres","map","genre","name","join","production_companies","company","main_container","_displayLoading","_displayFilm","Component","StyleSheet","create","flex","position","left","right","top","bottom","alignItems","justifyContent","height","margin","fontWeight","fontSize","flexWrap","marginLeft","marginRight","marginTop","color","textAlign","fontStyle","marginBottom","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, View, ActivityIndicator, Text, Image} from 'react-native'\nimport { getFilmDetailFromApi, getImagefromApi } from '../API/TDMBapi'\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler'\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { connect } from 'react-redux'\n\nclass FilmDetail extends React.Component {z\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            film: undefined,\n            isLoading: true\n        }\n    }\n\n    componentDidMount() {\n        const favoriteFilmIndex = this.props.favoritesFilm.findIndex(item => item.id === this.props.navigation.state.params.idFilm)\n        if (favoriteFilmIndex !== -1) {\n            this.setState({\n                film:this.props.favoritesFilm[favoriteFilmIndex],\n                isLoading: false\n            })\n            return\n        }\n        this.setState({ isLoading: true })\n        getFilmDetailFromApi(this.props.navigation.state.params.idFilm).then(data => {\n            this.setState({\n                film: data,\n                isLoading: false\n            })\n        })\n    }\n\n    _displayLoading() {\n        if (this.state.isLoading) {\n            return (\n                <View style={styles.loading_container}>\n                    <ActivityIndicator size='large'/>\n                </View>\n            )\n        }\n    }\n\n    _displayFavoriteImage() {\n        let sourceImage = require('../image/ic_no_favorite.png')\n        if (this.props.favoritesFilm.findIndex(item => item.id === this.state.film.id) !== -1) {\n            sourceImage = require('../image/ic_favorite.png')\n        }\n        return (\n            <Image\n                style={styles.favorite_image}\n                source={sourceImage}\n            />\n        )\n    }\n\n    _toogleFavorite() {\n        const action = { type: 'TOGGLE_FAVORITE', value: this.state.film }\n        this.props.dispatch(action)\n    }\n\n    _displayFilm() {\n        const { film } = this.state\n        if (film != undefined) {\n            return(\n                <ScrollView style={styles.scrollview_container}>\n                    <Image\n                        style={styles.image}\n                        source={{uri: getImagefromApi(film.backdrop_path)}}\n                    />\n                    <Text style={styles.title_text}>{film.title}</Text>\n                    <TouchableOpacity\n                    style={styles.favorite_container}\n                    onPress={() => this._toogleFavorite()}>\n                    {this._displayFavoriteImage()}\n                    </TouchableOpacity>\n                    <Text style={styles.description_text}>{film.overview}</Text>\n                    <Text style={styles.default_text}>Sorti le {moment(new Date(film.release_date)).format('DD/MM/YYYY')}</Text>\n                    <Text style={styles.default_text}>Note: {film.vote_average}</Text>\n                    <Text style={styles.default_text}>Nombre de votes: {film.vote_count}</Text>\n                    <Text style={styles.default_text}>Budget: {numeral(film.budget).format('0,0[.]00 $')}</Text>\n                    <Text style={styles.default_text}>Genre(s): {film.genres.map(function(genre){\n                        return genre.name;\n                    }).join(\" / \")}\n                    </Text>\n                    <Text style={styles.default_text}>Companie(s): {film.production_companies.map(function(company){\n                        return company.name;\n                    }).join(\" / \")}\n                    </Text>\n                </ScrollView>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <View style={styles.main_container}>\n                {this._displayLoading()}\n                {this._displayFilm()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    main_container: {\n        flex: 1,\n    },\n    loading_container: {\n        position: 'absolute',\n        left: 0,\n        right: 1,\n        top: 1,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    scrollview_container: {\n        flex: 1\n    },\n    image: {\n        height: 169,\n        margin: 5\n    },\n    title_text: {\n        fontWeight: 'bold',\n        fontSize: 35,\n        flex: 1,\n        flexWrap: 'wrap',\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n        marginTop: 10,\n        color: '#000000',\n        textAlign: 'center'\n    },\n    description_text: {\n        fontStyle: 'italic',\n        color: '#666666',\n        margin: 5,\n        marginBottom: 15\n    },\n    default_text: {\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 5\n    },\n    favorite_container: {\n        alignItems: 'center'\n    },\n    favorite_image: {\n        width: 40,\n        height: 40\n    }\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        favoritesFilm: state.favoritesFilm\n    }\n}\n\nexport default connect(mapStateToProps)(FilmDetail)"]},"metadata":{},"sourceType":"module"}