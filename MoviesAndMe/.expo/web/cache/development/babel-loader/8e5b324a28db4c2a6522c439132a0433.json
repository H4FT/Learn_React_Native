{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_list.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport FilmItem from \"./film_item\";\nimport { connect } from 'react-redux';\n\nvar FilmList = function (_React$Component) {\n  _inherits(FilmList, _React$Component);\n\n  var _super = _createSuper(FilmList);\n\n  function FilmList(props) {\n    var _this;\n\n    _classCallCheck(this, FilmList);\n\n    _this = _super.call(this, props);\n\n    _this._displayDetailForFilm = function (idFilm) {\n      _this.props.navigation.navigate('FilmDetail', {\n        idFilm: idFilm\n      });\n    };\n\n    _this.state = {\n      films: []\n    };\n    return _this;\n  }\n\n  _createClass(FilmList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(FlatList, {\n        style: styles.list,\n        data: this.props.films,\n        extraData: this.props.favoritesFilm,\n        keyExtractor: function keyExtractor(item) {\n          return item.id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(FilmItem, {\n            film: item,\n            isFilmFavorite: _this2.props.favoritesFilm.findIndex(function (film) {\n              return film.id === item.id;\n            }) !== -1 ? true : false,\n            displayDetailForFilm: _this2._displayDetailForFilm,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 21\n            }\n          });\n        },\n        onEndReachedThreshold: 0.5,\n        onEndReached: function onEndReached() {\n          if (!_this2.props.favoriteList && _this2.props.page < _this2.props.totalPages) {\n            _this2.props.loadFilms();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return FilmList;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  list: {\n    flex: 1\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    favoritesFilm: state.favoritesFilm\n  };\n};\n\nexport default connect(mapStateToProps)(FilmList);","map":{"version":3,"sources":["/home/aazibi/Learn_ReactJS/MoviesAndMe/components/film_list.js"],"names":["React","FilmItem","connect","FilmList","props","_displayDetailForFilm","idFilm","navigation","navigate","state","films","styles","list","favoritesFilm","item","id","toString","findIndex","film","favoriteList","page","totalPages","loadFilms","Component","StyleSheet","create","flex","mapStateToProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,QAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,Q;;;;;AAEF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAOnBC,qBAPmB,GAOK,UAACC,MAAD,EAAY;AAChC,YAAKF,KAAL,CAAWG,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B,EAA6C;AAACF,QAAAA,MAAM,EAAEA;AAAT,OAA7C;AACH,KATkB;;AAEf,UAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAFe;AAKlB;;;;6BAMQ;AAAA;;AACL,aACI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAEC,MAAM,CAACC,IADlB;AAEI,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWM,KAFrB;AAGI,QAAA,SAAS,EAAE,KAAKN,KAAL,CAAWS,aAH1B;AAII,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAUA,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAV;AAAA,SAJlB;AAKI,QAAA,UAAU,EAAE;AAAA,cAAEF,IAAF,QAAEA,IAAF;AAAA,iBACR,oBAAC,QAAD;AACI,YAAA,IAAI,EAAEA,IADV;AAEI,YAAA,cAAc,EAAG,MAAI,CAACV,KAAL,CAAWS,aAAX,CAAyBI,SAAzB,CAAmC,UAAAC,IAAI;AAAA,qBAAIA,IAAI,CAACH,EAAL,KAAYD,IAAI,CAACC,EAArB;AAAA,aAAvC,MAAoE,CAAC,CAAtE,GAA2E,IAA3E,GAAkF,KAFtG;AAGI,YAAA,oBAAoB,EAAE,MAAI,CAACV,qBAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA,SALhB;AAYI,QAAA,qBAAqB,EAAE,GAZ3B;AAaI,QAAA,YAAY,EAAE,wBAAM;AAChB,cAAI,CAAC,MAAI,CAACD,KAAL,CAAWe,YAAZ,IAA4B,MAAI,CAACf,KAAL,CAAWgB,IAAX,GAAkB,MAAI,CAAChB,KAAL,CAAWiB,UAA7D,EAAyE;AACrE,YAAA,MAAI,CAACjB,KAAL,CAAWkB,SAAX;AACH;AACJ,SAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAqBH;;;;EAnCkBtB,KAAK,CAACuB,S;;AAsC7B,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7Bb,EAAAA,IAAI,EAAE;AACFc,IAAAA,IAAI,EAAE;AADJ;AADuB,CAAlB,CAAf;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK,EAAI;AAC7B,SAAO;AACHI,IAAAA,aAAa,EAAEJ,KAAK,CAACI;AADlB,GAAP;AAGH,CAJD;;AAMA,eAAeX,OAAO,CAACyB,eAAD,CAAP,CAAyBxB,QAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, FlatList } from 'react-native'\nimport FilmItem from './film_item'\nimport { connect } from 'react-redux'\n\nclass FilmList extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            films: []\n        }\n    }\n\n    _displayDetailForFilm = (idFilm) => {\n        this.props.navigation.navigate('FilmDetail', {idFilm: idFilm})\n    }\n\n    render() {\n        return (\n            <FlatList\n                style={styles.list}\n                data={this.props.films}\n                extraData={this.props.favoritesFilm}\n                keyExtractor={(item) => item.id.toString()}\n                renderItem={({item}) => (\n                    <FilmItem\n                        film={item}\n                        isFilmFavorite={(this.props.favoritesFilm.findIndex(film => film.id === item.id) !== -1) ? true : false}\n                        displayDetailForFilm={this._displayDetailForFilm}\n                    />\n                )}\n                onEndReachedThreshold={0.5}\n                onEndReached={() => {\n                    if (!this.props.favoriteList && this.props.page < this.props.totalPages) {\n                        this.props.loadFilms()\n                    }\n                }}\n            />\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    list: {\n        flex: 1\n    }\n})\n\nconst mapStateToProps = state => {\n    return {\n        favoritesFilm: state.favoritesFilm\n    }\n}\n\nexport default connect(mapStateToProps)(FilmList)"]},"metadata":{},"sourceType":"module"}