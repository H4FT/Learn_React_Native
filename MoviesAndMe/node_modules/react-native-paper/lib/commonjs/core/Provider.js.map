{"version":3,"sources":["Provider.tsx"],"names":["Provider","reduceMotionEnabled","AccessibilityInfo","isReduceMotionEnabled","setState","console","warn","addEventListener","updateReduceMotionSettingsInfo","removeEventListener","props","children","settings","providedTheme","theme","state","DefaultTheme","animation","scale","icon","MaterialCommunityIcon","React","Component"],"mappings":"wkCAAA,oDACA,yCACA,kCACA,oCACA,kGACA,mFAEA,4E,kFAOqBA,CAAAA,Q,ogBACX,CACNC,mBAAmB,CAAE,KADf,C,2GAmBiC,+NAEHC,+BAAkBC,qBAAlB,EAFG,SAE/BF,mBAF+B,eAIrC,MAAKG,QAAL,CAAc,CAAEH,mBAAmB,CAAnBA,mBAAF,CAAd,EAJqC,+EAMrCI,OAAO,CAACC,IAAR,cANqC,iE,+OAdvCJ,+BAAkBK,gBAAlB,CACE,qBADF,CAEE,KAAKC,8BAFP,EAIA,KAAKA,8BAAL,G,4HAGqB,CACrBN,+BAAkBO,mBAAlB,CACE,qBADF,CAEE,KAAKD,8BAFP,EAID,C,uCAYQ,iBAC8C,KAAKE,KADnD,CACCC,QADD,aACCA,QADD,CACWC,QADX,aACWA,QADX,CAC4BC,aAD5B,aACqBC,KADrB,IAECb,CAAAA,mBAFD,CAEyB,KAAKc,KAF9B,CAECd,mBAFD,CAGP,GAAMa,CAAAA,KAAK,CAAG,CAACD,aAAD,CACV,sBAAcG,qBAAd,CAA4B,CAC1BC,SAAS,CAAE,CACTC,KAAK,CAAEjB,mBAAmB,CAAG,CAAH,CAAO,CADxB,CADe,CAA5B,CADU,CAMVY,aANJ,CAQA,MACE,qBAAC,mBAAD,kDACE,oBAAC,kBAAD,EAAkB,KAAK,CAAED,QAAQ,EAAI,CAAEO,IAAI,CAAEC,8BAAR,CAArC,iDACE,oBAAC,sBAAD,EAAe,KAAK,CAAEN,KAAtB,iDAA8BH,QAA9B,CADF,CADF,CADF,CAOD,C,sBAhDmCU,KAAK,CAACC,S","sourcesContent":["import * as React from 'react';\nimport { AccessibilityInfo } from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport { Theme } from '../types';\nimport DefaultTheme from '../styles/DefaultTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: Theme;\n  settings?: Settings;\n};\nexport default class Provider extends React.Component<Props> {\n  state = {\n    reduceMotionEnabled: false,\n  };\n\n  async componentDidMount() {\n    AccessibilityInfo.addEventListener(\n      'reduceMotionChanged',\n      this.updateReduceMotionSettingsInfo\n    );\n    this.updateReduceMotionSettingsInfo();\n  }\n\n  componentWillUnmount() {\n    AccessibilityInfo.removeEventListener(\n      'reduceMotionChanged',\n      this.updateReduceMotionSettingsInfo\n    );\n  }\n\n  private updateReduceMotionSettingsInfo = async () => {\n    try {\n      const reduceMotionEnabled = await AccessibilityInfo.isReduceMotionEnabled();\n\n      this.setState({ reduceMotionEnabled });\n    } catch (err) {\n      console.warn(err);\n    }\n  };\n\n  render() {\n    const { children, settings, theme: providedTheme } = this.props;\n    const { reduceMotionEnabled } = this.state;\n    const theme = !providedTheme\n      ? Object.assign(DefaultTheme, {\n          animation: {\n            scale: reduceMotionEnabled ? 0 : 1,\n          },\n        })\n      : providedTheme;\n\n    return (\n      <PortalHost>\n        <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n          <ThemeProvider theme={theme}>{children}</ThemeProvider>\n        </SettingsProvider>\n      </PortalHost>\n    );\n  }\n}\n"]}