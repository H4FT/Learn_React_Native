{"version":3,"sources":["Icon.tsx"],"names":["ICON_SIZE","ICON_OFFSET","StyleContext","React","createContext","style","isTextInputFocused","forceFocus","IconAdornment","icon","topPosition","side","top","contextState","TextInputIcon","name","onPress","rest","useContext","onPressWithFocusControl","useCallback","styles","container","iconButton","displayName","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"mappings":"yeAAA,oDACA,yCAEA,oE,qGAaO,GAAMA,CAAAA,SAAS,CAAG,EAAlB,C,4BACP,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAQA,GAAMC,CAAAA,YAAY,CAAGC,eAAMC,aAAN,CAAsC,CACzDC,KAAK,CAAE,EADkD,CAEzDC,kBAAkB,CAAE,KAFqC,CAGzDC,UAAU,CAAE,qBAAM,CAAE,CAHqC,CAAtC,CAArB,CAMO,GAAMC,CAAAA,aAKuB,CAAG,QAL1BA,CAAAA,aAK0B,MAMjC,IALJC,CAAAA,IAKI,MALJA,IAKI,CAJJC,WAII,MAJJA,WAII,CAHJC,IAGI,MAHJA,IAGI,CAFJL,kBAEI,MAFJA,kBAEI,CADJC,UACI,MADJA,UACI,CACJ,GAAMF,CAAAA,KAAK,+BACTO,GAAG,CAAEF,WADI,EAERC,IAFQ,CAEDV,WAFC,CAAX,CAIA,GAAMY,CAAAA,YAAY,CAAG,CAAER,KAAK,CAALA,KAAF,CAASC,kBAAkB,CAAlBA,kBAAT,CAA6BC,UAAU,CAAVA,UAA7B,CAArB,CAEA,MACE,8BAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEM,YAA9B,iDAA6CJ,IAA7C,CADF,CAGD,CArBM,C,oCAuBP,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAuC,IAApCC,CAAAA,IAAoC,OAApCA,IAAoC,CAA9BC,OAA8B,OAA9BA,OAA8B,CAAlBC,IAAkB,uFACTd,eAAMe,UAAN,CAChDhB,YADgD,CADS,CACnDG,KADmD,mBACnDA,KADmD,CAC5CC,kBAD4C,mBAC5CA,kBAD4C,CACxBC,UADwB,mBACxBA,UADwB,CAK3D,GAAMY,CAAAA,uBAAuB,CAAGhB,eAAMiB,WAAN,CAAkB,UAAM,CACtD,GAAI,CAACd,kBAAL,CAAyB,CACvBC,UAAU,GACX,CACDS,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,GACR,CAL+B,CAK7B,CAACT,UAAD,CAAaD,kBAAb,CAAiCU,OAAjC,CAL6B,CAAhC,CAOA,MACE,8BAAC,iBAAD,EAAM,KAAK,CAAE,CAACK,MAAM,CAACC,SAAR,CAAmBjB,KAAnB,CAAb,iDACE,6BAAC,mBAAD,wBACE,IAAI,CAAEU,IADR,CAEE,KAAK,CAAEM,MAAM,CAACE,UAFhB,CAGE,IAAI,CAAEvB,SAHR,CAIE,OAAO,CAAEmB,uBAJX,EAKMF,IALN,mDADF,CADF,CAWD,CAvBD,CAwBAH,aAAa,CAACU,WAAd,CAA4B,gBAA5B,CAEA,GAAMH,CAAAA,MAAM,CAAGI,wBAAWC,MAAX,CAAkB,CAC/BJ,SAAS,CAAE,CACTK,QAAQ,CAAE,UADD,CAETC,KAAK,CAAE5B,SAFE,CAGT6B,MAAM,CAAE7B,SAHC,CAIT8B,cAAc,CAAE,QAJP,CAKTC,UAAU,CAAE,QALH,CADoB,CAQ/BR,UAAU,CAAE,CACVS,MAAM,CAAE,CADE,CARmB,CAAlB,CAAf,C,aAaelB,a","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\n\nimport IconButton from '../../IconButton';\nimport { $Omit, Theme } from '../../../../src/types';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme'\n> & {\n  name: string;\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  theme?: Theme;\n};\n\nexport const ICON_SIZE = 24;\nconst ICON_OFFSET = 12;\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n});\n\nexport const IconAdornment: React.FunctionComponent<{\n  testID: string;\n  icon: React.ReactNode;\n  topPosition: number;\n  side: 'left' | 'right';\n} & Omit<StyleContextType, 'style'>> = ({\n  icon,\n  topPosition,\n  side,\n  isTextInputFocused,\n  forceFocus,\n}) => {\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = { style, isTextInputFocused, forceFocus };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\nconst TextInputIcon = ({ name, onPress, ...rest }: Props) => {\n  const { style, isTextInputFocused, forceFocus } = React.useContext(\n    StyleContext\n  );\n\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (!isTextInputFocused) {\n      forceFocus();\n    }\n    onPress?.();\n  }, [forceFocus, isTextInputFocused, onPress]);\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={name}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n"]}