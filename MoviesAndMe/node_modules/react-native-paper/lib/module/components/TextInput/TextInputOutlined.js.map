{"version":3,"sources":["TextInputOutlined.tsx"],"names":["OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","rest","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","backgroundColor","background","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","ADORNMENT_OFFSET","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","paddingTop","paddingBottom","LabelBackground","ref","placeholderTextColor","underlineColorAndroid","input","color","textAlignVertical","React","Component","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","flexGrow","margin","textAlign","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport { RenderProps, ChildTextInputProps } from './types';\nimport { Theme } from '../../types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      ...rest\n    } = this.props;\n\n    const adornmentConfig = getAdornmentConfig({ left, right });\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      backgroundColor = colors.background,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    let labelTranslationXOffset = 0;\n    const isAdornmentLeftIcon = adornmentConfig.some(\n      ({ side, type }) =>\n        side === AdornmentSide.Left && type === AdornmentType.Icon\n    );\n    if (isAdornmentLeftIcon) {\n      labelTranslationXOffset =\n        (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n    }\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = interpolatePlaceholder(\n      parentState.labeled,\n      hasActiveOutline\n    );\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n      labelTranslationXOffset,\n    };\n\n    const minHeight = (height ||\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: leftLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: rightLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n    const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: ADORNMENT_SIZE,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n      }\n    );\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Icon]: iconTopPosition,\n        [AdornmentType.Affix]: affixTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                },\n                adornmentStyleAdjustmentForNativeInput,\n              ],\n            } as RenderProps)}\n          </View>\n          <TextInputAdornment {...adornmentProps} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}